27.09.2015
==========

olej@nvidia ~/2015_WORK/own.BOOK/SysCalls/Netm/examles $ make
make -C /lib/modules/3.13.0-37-generic/build M=/home/olej/2015_WORK/own.BOOK/SysCalls/Netm/examles modules
make[1]: Вход в каталог `/usr/src/linux-headers-3.13.0-37-generic'
  CC [M]  /home/olej/2015_WORK/own.BOOK/SysCalls/Netm/examles/fwnet.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/olej/2015_WORK/own.BOOK/SysCalls/Netm/examles/fwnet.mod.o
  LD [M]  /home/olej/2015_WORK/own.BOOK/SysCalls/Netm/examles/fwnet.ko
make[1]: Выход из каталога `/usr/src/linux-headers-3.13.0-37-generic'

----------------------------------------------------------------------------------------------------------

olej@nvidia ~ $ uname -r
3.13.0-37-generic

olej@nvidia ~ $ man socketcall

SOCKETCALL(2)                                                Linux Programmer's Manual                                               SOCKETCALL(2)

NAME
       socketcall - socket system calls

SYNOPSIS
       int socketcall(int call, unsigned long *args);

DESCRIPTION
       socketcall()  is a common kernel entry point for the socket system calls.  call determines which socket function to invoke.  args points to
       a block containing the actual arguments, which are passed through to the appropriate call.

       User programs should call the appropriate functions by their usual names.  Only standard library implementors and kernel  hackers  need  to
       know about socketcall().

CONFORMING TO
       This call is specific to Linux, and should not be used in programs intended to be portable.

NOTES
       On  a some architectures—for example, x86-64 and ARM—there is no socketcall() system call; instead socket(2), accept(2), bind(2), and so on
       really are implemented as separate system calls.

----------------------------------------------------------------------------------------------------------

/usr/include/linux/net.h

#define SYS_SOCKET      1               /* sys_socket(2)                */
#define SYS_BIND        2               /* sys_bind(2)                  */
#define SYS_CONNECT     3               /* sys_connect(2)               */
#define SYS_LISTEN      4               /* sys_listen(2)                */
#define SYS_ACCEPT      5               /* sys_accept(2)                */
#define SYS_GETSOCKNAME 6               /* sys_getsockname(2)           */
#define SYS_GETPEERNAME 7               /* sys_getpeername(2)           */
#define SYS_SOCKETPAIR  8               /* sys_socketpair(2)            */
#define SYS_SEND        9               /* sys_send(2)                  */
#define SYS_RECV        10              /* sys_recv(2)                  */
#define SYS_SENDTO      11              /* sys_sendto(2)                */
#define SYS_RECVFROM    12              /* sys_recvfrom(2)              */
#define SYS_SHUTDOWN    13              /* sys_shutdown(2)              */
#define SYS_SETSOCKOPT  14              /* sys_setsockopt(2)            */
#define SYS_GETSOCKOPT  15              /* sys_getsockopt(2)            */
#define SYS_SENDMSG     16              /* sys_sendmsg(2)               */
#define SYS_RECVMSG     17              /* sys_recvmsg(2)               */
#define SYS_ACCEPT4     18              /* sys_accept4(2)               */
#define SYS_RECVMMSG    19              /* sys_recvmmsg(2)              */
#define SYS_SENDMMSG    20              /* sys_sendmmsg(2)              */

----------------------------------------------------------------------------------------------------------

olej@nvidia /usr/include/i386-linux-gnu/asm $ pwd
/usr/include/i386-linux-gnu/asm

olej@nvidia /usr/include/i386-linux-gnu/asm $ cat unistd_32.h | grep socketcall
#define __NR_socketcall 102

olej@nvidia /usr/include/i386-linux-gnu/asm $ cat unistd_64.h | grep socketcall

olej@nvidia /usr/include/i386-linux-gnu/asm $ cat unistd_64.h | grep connect
#define __NR_connect 42

olej@nvidia /usr/include/i386-linux-gnu/asm $ cat unistd_32.h | grep connect

----------------------------------------------------------------------------------------------------------

olej@nvidia /usr/include/i386-linux-gnu/asm $ uname -a
Linux nvidia 3.13.0-37-generic #64-Ubuntu SMP Mon Sep 22 21:30:01 UTC 2014 i686 i686 i686 GNU/Linux

olej@nvidia ~/2015_WORK/in.WORK/FWall/FWall/Articles.fw $ sudo cat /proc/kallsyms | grep sys_socketcall
c1075930 W compat_sys_socketcall
c1562890 T sys_socketcall

==========================================================================================================

27.09.2015
==========


==========================================================================================================
